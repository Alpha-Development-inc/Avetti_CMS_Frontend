[{"D:\\Capstone\\avetti_cms\\Avetti_CMS_Frontend\\src\\index.js":"1","D:\\Capstone\\avetti_cms\\Avetti_CMS_Frontend\\src\\App.js":"2","D:\\Capstone\\avetti_cms\\Avetti_CMS_Frontend\\src\\reportWebVitals.js":"3","D:\\Capstone\\avetti_cms\\Avetti_CMS_Frontend\\src\\components\\MainPage.js":"4","D:\\Capstone\\avetti_cms\\Avetti_CMS_Frontend\\src\\components\\HomePage.js":"5","D:\\Capstone\\avetti_cms\\Avetti_CMS_Frontend\\src\\components\\Page.js":"6","D:\\Capstone\\avetti_cms\\Avetti_CMS_Frontend\\src\\components\\Dialog.js":"7","D:\\Capstone\\avetti_cms\\Avetti_CMS_Frontend\\src\\components\\Row.js":"8"},{"size":1081,"mtime":1613575986923,"results":"9","hashOfConfig":"10"},{"size":449,"mtime":1613552015817,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499158900000,"results":"12","hashOfConfig":"10"},{"size":1148,"mtime":1613350392000,"results":"13","hashOfConfig":"10"},{"size":1303,"mtime":1613576638485,"results":"14","hashOfConfig":"10"},{"size":1913,"mtime":1613547673822,"results":"15","hashOfConfig":"10"},{"size":2768,"mtime":1613355858000,"results":"16","hashOfConfig":"10"},{"size":1038,"mtime":1613355576000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1w20h2i",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"21"},"D:\\Capstone\\avetti_cms\\Avetti_CMS_Frontend\\src\\index.js",["39"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport  \"./components/MainPage\";\nimport reportWebVitals from './reportWebVitals';\n\nimport { \n  createHttpLink,\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  gql\n } from '@apollo/client';\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:8080/graphql',\n  fetchOptions: {\n    mode: 'no-cors'\n  }\n});\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n});\n\n// client.query({\n//     query: gql`\n//       {\n//         allPages {\n//           title\n//         }\n//       }\n//       `\n//   })\n//   .then(result => console.log(result))\n//   .catch(error => console.log(error));\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App/>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["40","41"],"D:\\Capstone\\avetti_cms\\Avetti_CMS_Frontend\\src\\App.js",[],"D:\\Capstone\\avetti_cms\\Avetti_CMS_Frontend\\src\\reportWebVitals.js",[],"D:\\Capstone\\avetti_cms\\Avetti_CMS_Frontend\\src\\components\\MainPage.js",[],"D:\\Capstone\\avetti_cms\\Avetti_CMS_Frontend\\src\\components\\HomePage.js",["42","43"],"D:\\Capstone\\avetti_cms\\Avetti_CMS_Frontend\\src\\components\\Page.js",["44","45","46","47"],"import React, { useState } from 'react';\r\nimport Row from \"./Row\";\r\nimport ReactDOM from 'react-dom';\r\nimport Demo from './Dialog';\r\n\r\nconst Page =(props)=>{\r\n\r\n    const [pages,setPages]=useState([]);\r\n    const [rows,setRows]=useState([]);\r\n\r\n    let prevRowId=0\r\n\r\n    console.log(props.match.params.pageTitle);\r\n\r\n     \r\n    function addRow(){\r\n        prevRowId=prevRowId+1;\r\n        setRows([...rows,\r\n                {\r\n                    id:prevRowId,\r\n                    order:prevRowId,\r\n                    contentComponents:[]\r\n                }])\r\n    } \r\n    \r\n    // function addRowNew(){\r\n    //     prevRowId=prevRowId+1;\r\n    //     setPages(\r\n    //         [...pages,\r\n    //             {\r\n    //               id: (prevRowId),\r\n                  \r\n    //               contentRows : [\r\n    //                 {\r\n    //                   id : (prevRowId+=1),\r\n    //                   orderNumber:1,\r\n    //                   contentComponents: [\r\n    //                  {\r\n                         \r\n    //                  }\r\n    //                   ]\r\n    //                 },\r\n                    \r\n                    \r\n    //               ]\r\n    //             }\r\n               \r\n    //         ]\r\n    //     )\r\n    //     console.log(pages);\r\n    //     //ReactDOM.render(<Row />,document.getElementById('page'))\r\n    // }\r\n    return(\r\n        <div id=\"page\">\r\n            <div id ='buttons'>\r\n                    <button onClick={addRow}>\r\n                        +\r\n                    </button>\r\n                    \r\n                    \r\n            </div>\r\n            <div id='rowcontent'>\r\n                {/* {pages.map((g)=>(g.contentRows.map((g)=>(<><Row rowComponents={g.contentComponents}/></>))))} */}\r\n                {rows.map((g)=>(<><Row rowComponents={g.contentComponents}/></>))}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Page;","D:\\Capstone\\avetti_cms\\Avetti_CMS_Frontend\\src\\components\\Dialog.js",["48","49","50","51","52"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\nconst emails = [\"text\", \"image\"];\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600]\r\n  }\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    onClose(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">Type of component</DialogTitle>\r\n      <List>\r\n        {emails.map((email) => (\r\n          <ListItem\r\n            button\r\n            onClick={() => handleListItemClick(email)}\r\n            key={email}\r\n          >\r\n            \r\n            <ListItemText primary={email} />\r\n          </ListItem>\r\n        ))}\r\n\r\n        {/* <ListItem\r\n          autoFocus\r\n          button\r\n          onClick={() => handleListItemClick(\"addAccount\")}\r\n        >\r\n          \r\n          <ListItemText primary=\"Add account\" />\r\n        </ListItem> */}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired\r\n};\r\n\r\nexport default function SimpleDialogDemo() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(\"None\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\r\n      <br />\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Select type of component:\r\n      </Button>\r\n      <SimpleDialog\r\n        selectedValue={selectedValue}\r\n        open={open}\r\n        onClose={handleClose}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","D:\\Capstone\\avetti_cms\\Avetti_CMS_Frontend\\src\\components\\Row.js",["53","54"],"import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport Demo from './Dialog';\r\nconst Row =(props)=>{\r\n    const [rowComponents,setRowComponents]=useState([]);\r\n    function addNewComponent(){\r\n        ReactDOM.render(<Demo />, document.querySelector('#root'));\r\n    }\r\n\r\n    return(\r\n        <div id=\"row\">\r\n            <div id ='buttons'>\r\n                    <button onClick={addNewComponent}>\r\n                        +\r\n                    </button>\r\n                    <button>\r\n                        ^\r\n                    </button>\r\n                    <button>\r\n                        v\r\n                    </button>\r\n                    <button>\r\n                        delete\r\n                    </button>\r\n                    <button>\r\n                        edit\r\n                    </button>\r\n            </div>\r\n            <div id='contentcomponent'>\r\n                {props.rowComponents.map((g)=>(g.data))}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Row;",{"ruleId":"55","severity":1,"message":"56","line":13,"column":3,"nodeType":"57","messageId":"58","endLine":13,"endColumn":6},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"55","severity":1,"message":"63","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":18},{"ruleId":"55","severity":1,"message":"64","line":5,"column":7,"nodeType":"57","messageId":"58","endLine":5,"endColumn":16},{"ruleId":"55","severity":1,"message":"65","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":16},{"ruleId":"55","severity":1,"message":"66","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":12},{"ruleId":"55","severity":1,"message":"67","line":8,"column":12,"nodeType":"57","messageId":"58","endLine":8,"endColumn":17},{"ruleId":"55","severity":1,"message":"68","line":8,"column":18,"nodeType":"57","messageId":"58","endLine":8,"endColumn":26},{"ruleId":"55","severity":1,"message":"69","line":5,"column":8,"nodeType":"57","messageId":"58","endLine":5,"endColumn":14},{"ruleId":"55","severity":1,"message":"70","line":8,"column":8,"nodeType":"57","messageId":"58","endLine":8,"endColumn":22},{"ruleId":"55","severity":1,"message":"71","line":12,"column":8,"nodeType":"57","messageId":"58","endLine":12,"endColumn":18},{"ruleId":"55","severity":1,"message":"72","line":13,"column":8,"nodeType":"57","messageId":"58","endLine":13,"endColumn":15},{"ruleId":"55","severity":1,"message":"73","line":26,"column":9,"nodeType":"57","messageId":"58","endLine":26,"endColumn":16},{"ruleId":"55","severity":1,"message":"74","line":5,"column":12,"nodeType":"57","messageId":"58","endLine":5,"endColumn":25},{"ruleId":"55","severity":1,"message":"75","line":5,"column":26,"nodeType":"57","messageId":"58","endLine":5,"endColumn":42},"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"'useQuery' is defined but never used.","'ALL_PAGES' is assigned a value but never used.","'ReactDOM' is defined but never used.","'Demo' is defined but never used.","'pages' is assigned a value but never used.","'setPages' is assigned a value but never used.","'Avatar' is defined but never used.","'ListItemAvatar' is defined but never used.","'PersonIcon' is defined but never used.","'AddIcon' is defined but never used.","'classes' is assigned a value but never used.","'rowComponents' is assigned a value but never used.","'setRowComponents' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]